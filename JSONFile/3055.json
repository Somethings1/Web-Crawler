{"summary":"Bitcoin Core developer Amiti Uttarwar is working to revise Bitcoin transactions\u2019 rebroadcast logic in order toÂ strengthen the network\u2019s privacy feature\nThe proposed change would also mitigate the risk of dusk attacks.","author":["Yilun Cheng","The Block"],"webName":"theblock.co","link":"https:\/\/www.theblock.co\/post\/58620\/bitcoin-core-developer-reworks-the-networks-rebroadcast-logic-to-improve-privacy","publishDate":"2020-03-13T12:31:20","id":3055,"type":null,"title":"Bitcoin Core developer reworks the network&#x27;s &#x27;rebroadcast logic&#x27; to improve privacy","category":["Bitcoin"],"content":["<span data-v-f87c67ca=\"\">Bitcoin Core developer Amiti Uttarwar is working on revising the network\u2019s rebroadcast logic to introduce more privacy into the transaction rebroadcasting process.<\/span>","<span data-v-f87c67ca=\"\">A relatively new addition to the Bitcoin Core team, Uttarwar was first employed as a Bitcoin Core developer at crypto startup Xapo in Oct. 2019. Her main focus right now concerns a proposed change to bitcoin's rebroadcast logic, which Pieter Wuille&nbsp;<a href=\"https:\/\/www.theblockcrypto.com\/daily\/58175\/bitcoin-core-devs-take-the-stage-at-mit-to-discuss-taproot-protocol-consensus-and-promising-new-projects\" data-v-f87c67ca=\"\">previously highlighted<\/a> as one of a number of promising peer-to-peer implementation projects.<\/span>","<span data-v-f87c67ca=\"\">When users initiate a bitcoin transaction, as Uttarwar explained at a <\/span><a href=\"https:\/\/www.youtube.com\/watch?v=v4TXfwwz_VI\" data-v-f87c67ca=\"\"><span data-v-f87c67ca=\"\">Sep. 2019 presentation<\/span><\/a><span data-v-f87c67ca=\"\">, they need to broadcast the transaction \u2013 meaning they must send out an INV message to their peers and make sure that the transaction is in other people\u2019s memory pool, or mempool.<\/span>","<span data-v-f87c67ca=\"\">However, the initial broadcast does not always go through. For example, there could be issues with relay or the transaction could get evicted from the mempool when other transactions have higher fee rates. If such issues arise, users would have to send out another INV message and rebroadcast it to their peers.&nbsp;<\/span>","<span data-v-f87c67ca=\"\">\u201CThe current rebroadcast logic is terrible for privacy,\u201D Uttarwar said, explaining her motivation for the <\/span><a href=\"https:\/\/gist.github.com\/amitiuttarwar\/b592ee410e1f02ac0d44fcbed4621dba\" data-v-f87c67ca=\"\"><span data-v-f87c67ca=\"\">proposed change<\/span><\/a><span data-v-f87c67ca=\"\">.&nbsp;<\/span>","<span data-v-f87c67ca=\"\">With the current system, she said, only the source wallet will rebroadcast transactions. As a result, if a spy node sees two INV messages for the same transaction coming from a node, it can infer that the node is the source wallet, \u201Cmaking privacy a dead giveaway.\u201D<\/span>","<span data-v-f87c67ca=\"\">\u201CThis leaves room for a vulnerability called a dust attack,\u201D she argued.&nbsp; A dust attack happens when an attacker sends a tiny amount of BTC to a number of different addresses and observes various wallets\u2019 rebroadcasting behaviors, thus undermining the network\u2019s privacy feature.&nbsp;<\/span>","<span data-v-f87c67ca=\"\">Uttarwar\u2019s proposed mechanism would migrate this vulnerability by having a more private rebroadcast behavior that does not reveal a transaction's source wallet. If her alternative design gets implemented, instead of only the source wallet sending out the rebroadcast signal, all nodes will rebroadcast transitions that they believe \u201Cshould have been confirmed.\u201D<\/span>","<span data-v-f87c67ca=\"\">\u201CI extract the logic from the wallet into the node and I use the block assembler so that we can identify the top of the mempool in a comparable way to how my node will be looking at it,\u201D she said, going into some of the functionalities her proposal includes. \u201CI update the wallet logic to resubmit unconfirmed transactions to the node instead of sending it directly to its peers. I add a recency filter in the block creation logic so that we can ignore the new recent transactions.\u201D<\/span>","<span data-v-f87c67ca=\"\">The pull request (PR) was first opened on Aug. 2019, and Uttarwar told The Block that she has made considerable changes to the proposal since then.&nbsp;<\/span>","<span data-v-f87c67ca=\"\">\u201COne of the big pieces of change is that I've been able to break out a piece of functionality from the large PR into a standalone change,\u201D she said. \u201CSo I'm currently working on trying to see that change through. And once we get that merged, I'll return back to this larger rebroadcast project.\u201D<\/span>","<span data-v-f87c67ca=\"\">Another significant change concerns a mechanism to keep track of the maximum amount of times one can rebroadcast a transition. While Uttarwar previously planned to include it as a followup to her rebroadcast proposal, she recently decided to build it out after a reviewer highlighted how the absence of this change could be an attack vector.&nbsp;<\/span>","<span data-v-f87c67ca=\"\">Uttarwar also pointed to excessive bandwidth usage as one of her underlying concerns behind her design choices.&nbsp;<\/span>","<span data-v-f87c67ca=\"\">\u201CI think that bandwidth is something that we should be carefully considering and, if done wrong, could be problematic,\u201D she said. To avoid extreme, network-wide bandwidth spikes, Uttarwar has incorporated a few preventive mechanisms, including poisson distribution of rebroadcast timings per node and filtering logic for rebroadcast candidates.&nbsp;<\/span>","<span data-v-f87c67ca=\"\">While the PR has been in place for seven months, she said she\u2019s in no rush to push the proposal through.&nbsp;<\/span>","<span data-v-f87c67ca=\"\">\u201CI'm less concerned about timeline and I'm more concerned about robustness every step along the way,\u201D she said. \u201CI wouldn't want anything to be merged prematurely.\u201D<\/span>"],"hashtag":[]}