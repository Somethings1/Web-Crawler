{"summary":"Paradigm is joining a crowded field with a new open-source node implementation for Ethereum. But its CTO doesn&#x27;t view it as zero-sum.","webName":"theblock.co","link":"https:\/\/www.theblock.co\/post\/235941\/inside-paradigms-plan-to-make-ethereum-more-resilient","publishDate":"2023-06-22T10:45:29","id":4147,"type":null,"title":"Inside Paradigm\u2019s plan to make Ethereum more resilient","category":["CRYPTO ECOSYSTEMS"],"content":["Crypto venture firm <a href=\"https:\/\/www.paradigm.xyz\/\" data-v-f87c67ca=\"\">Paradigm<\/a> made one of its most notable contributions to the Ethereum network yesterday, launching the alpha version of an open-source node implementation called Reth v0.1.0.","Reth, developed in the Rust programming language and released under an Apache\/MIT License, forms part of the backbone of <a href=\"https:\/\/www.theblock.co\/post\/232247\/crypto-vc-paradigm-ai\" data-v-f87c67ca=\"\">Paradigm\u2019s<\/a> commitment to actively influencing the crypto sphere by creating client software centered around performance. The project took nine months of coding, a devoted team of eight core developers and 90 contributors.","It aims to reduce latency between the node and the network while maintaining uptime at all times. However, the main objective of Reth goes beyond the technical as it seeks to make Ethereum\u2019s blockchain more approachable for developers by enhancing node performance.","Although client diversity isn\u2019t a pressing concern for Ethereum, it\u2019s crucial for the network\u2019s users to rely on diverse client projects that offer fully functional node software and well-connected to the network. This is where Reth comes into play.","\u201CWe believe that by using Reth as a node, we can actively contribute to enhancing Ethereum\u2019s client diversity, thereby improving the stability and decentralization of the protocol,\u201D Georgios Konstantopoulos, CTO of Paradigm and developer behind Reth, told The Block.","Ethereum node clients can be divided into two categories: those designed for Ethereum\u2019s execution layer, which handles transaction settlement, and those meant for the consensus layer, responsible for achieving network consensus. Notably, Paradigm has joined a growing list of companies developing such software for Ethereum, contributing to an already crowded client software market.","Existing popular execution clients include Geth, Nethermind, Besu, and Erigon, while consensus clients comprise Lighthouse, Lodestar, Nimbus, Prysm, and Teku. Nevertheless, the Ethereum ecosystem always stands to gain from an influx of a new client project, especially one backed by an influential venture fund like Paradigm, renowned for its substantial technical and financial prowess.","Reth\u2019s primary role will be as an execution client, enabling users to utilize it for block building and maximal value extraction as necessary. Moreover, it can support Ethereum consensus nodes as well.&nbsp;","","","Reth has already demonstrated impressive performance metrics. The team said that Reth can endure heavy traffic and sync quickly. It was able to sync with the Ethereum blockchain from its genesis to block number 17.4 million within 50 hours. This, Paradigm, claims, is the the fastest sync speed among all client projects.","Despite these significant advancements, Reth is still in its alpha phase, with the team working towards improving the software\u2019s stability and resilience.&nbsp;","<em data-v-f87c67ca=\"\">The Block caught up with Paradigm's Georgios <span data-v-f87c67ca=\"\">Konstantopoulos <\/span>to discuss Reth's role in the Ethereum ecosystem, the challenges faced in building Reth out, and what the industry should expect to come next. Here's the full Q&amp;A:<\/em>","<span data-v-f87c67ca=\"\">We believe that by using Reth as a node, we can actively contribute to enhancing Ethereum's client diversity, thereby improving the stability and decentralization of the protocol. Furthermore, Reth's role as an SDK ensures that it provides a user-friendly and accessible tool for developing EVM-centric infrastructure, such as indexers, block builders, and more.<\/span>","<span data-v-f87c67ca=\"\">We do not have a zero sum mindset, and we hope that Reth offers an alternative option for people who are after high performance and a great node experience.<\/span>","<span data-v-f87c67ca=\"\">The biggest challenges have been:<\/span>","<span data-v-f87c67ca=\"\">Our biggest learning from this was unsurprisingly: Mature testing and benchmarking practices are table stakes for any high performance \/ complex system developer\u2019s toolkit. We put a lot of emphasis on that early on, and that allowed us to iterate very fast on new features, while covering edge cases and optimizing components without fear of breakages or regressions.<\/span>","<span data-v-f87c67ca=\"\">Want to caveat this response by saying that Reth is in \u201Calpha\u201D phase, and we\u2019re still heavily testing and improving its stability.<\/span>","<span data-v-f87c67ca=\"\">We apply a defense-in-depth approach towards security to gain confidence around resilience:<\/span>","<span data-v-f87c67ca=\"\">We are generally happy with how the node behaves today, although there\u2019s still more edge cases to be uncovered. We feel confident about the correctness of the historical sync, and any resilience concerns would be about edge cases we haven\u2019t observed yet at the tip of the chain, e.g. during a reorg that is not captured in the Hive testing suite. Testing never ends and is a process which we take very seriously for the long run.<\/span>","<span data-v-f87c67ca=\"\">Production-readiness is a really high bar, which we aspire to meet in the future. We asked <\/span><a href=\"https:\/\/twitter.com\/gakonst\/status\/1671280720969617409?s=20\" data-v-f87c67ca=\"\"><span data-v-f87c67ca=\"\">node operators<\/span><\/a><span data-v-f87c67ca=\"\"> what that bar is for them, and these are the most important metrics they shared for production readiness:<\/span>","<span data-v-f87c67ca=\"\">All of these are metrics which we\u2019re actively tracking in all our running nodes. The bottleneck to production readiness is going to be time, more eyes on the code, and more node operators running the node. Our ask from the community would be to be extremely open and direct with their feedback. We take every feedback loop very seriously and would love for people to run nodes and share their experience with us.<\/span>","<span data-v-f87c67ca=\"\">Ethereum\u2019s roadmap is long and ambitious! I think it\u2019s hard to pick one item from that list given its longtermism. I think EIP-4844 and Cancun are the most important thing for us to get right due to the implications on rollup scalability. I don\u2019t think we\u2019ll implement things differently in any way, but the process for implementing will be more collaborative with the rest of the core devs, compared to us so far catching up to a known target.<\/span>","<span data-v-f87c67ca=\"\">Client diversity is critical for a resilient network like Ethereum. If a single client dominates with a market share of 66% or more, there is a significant risk of disrupting the chain and causing monetary loss for node operators. This is because if that client has a bug and forks to its own chain, it can finalize the fork, making it difficult for validators to return to the real chain without being penalized.&nbsp;<\/span>","<span data-v-f87c67ca=\"\">Anyone is free to start a new implementation of the Ethereum protocol, in any language of their choice, like we did. The main pain point of client diversity is that testing across all client implementations becomes harder. We should invest further in cross-node integration testing infrastructure, like the Ethereum Foundation does by maintaining <\/span><a href=\"https:\/\/github.com\/ethereum\/hive\" data-v-f87c67ca=\"\"><span data-v-f87c67ca=\"\">Hive<\/span><\/a><span data-v-f87c67ca=\"\">.<\/span>","<span data-v-f87c67ca=\"\">Firstly, we were fortunate enough to learn from all the lessons of client development over the past years, which let us avoid many mistakes. Secondly, we decided to build Reth as a brand-new modern codebase written in production Rust that is well documented, tested, and modularized, which allows for high performance with fast development speed, with little technical debt.<\/span>","<span data-v-f87c67ca=\"\">Still, we see many areas with room for improvement. We\u2019d like to support OP Stack as part of the upstream node implementation, and further refactor the codebase to be easier to consume. Finally, we\u2019re also excited about further performance optimizations, especially around reading and writing to disk, and the database size.<\/span>","<span data-v-f87c67ca=\"\">We invite every developer to join us in this process of extending and optimizing the node!<\/span>","Â© 2023 The Block. All Rights Reserved. This article is provided for informational purposes only. It is not offered or intended to be used as legal, tax, investment, financial, or other advice."],"entity":[{"type":"4844","content":"DATE"},{"type":"Cancun","content":"LOCATION"},{"type":"Prysm","content":"LOCATION"},{"type":"Paradigm","content":"ORGANIZATION"},{"type":"The Block","content":"ORGANIZATION"},{"type":"2023","content":"DATE"},{"type":"Erigon","content":"PERSON"},{"type":"today","content":"DATE"},{"type":"Reth","content":"ORGANIZATION"},{"type":"Nimbus","content":"PERSON"},{"type":"Besu","content":"PERSON"},{"type":"66%","content":"PERCENT"},{"type":"Ethereum Foundation","content":"ORGANIZATION"},{"type":"SDK","content":"ORGANIZATION"},{"type":"Reth","content":"PERSON"},{"type":"Lodestar","content":"LOCATION"},{"type":"Ethereum","content":"ORGANIZATION"},{"type":"MIT License","content":"ORGANIZATION"},{"type":"Georgios Konstantopoulos","content":"PERSON"},{"type":"Nethermind","content":"LOCATION"},{"type":"Teku","content":"ORGANIZATION"},{"type":"CTO","content":"ORGANIZATION"},{"type":"Georgios <span data-v-f87c67ca=\"\">Konstantopoulos","content":"PERSON"},{"type":"Ethereum","content":"LOCATION"}],"hashtag":[],"authors":["Frank Chaparro","Vishal Chawla","The Block"]}